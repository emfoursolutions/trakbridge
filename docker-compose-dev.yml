# =============================================================================
# TrakBridge Development Environment Docker Compose Configuration
# =============================================================================
#
# This configuration provides a development environment optimized for:
# - Rapid development and testing
# - Live code reloading and debugging
# - Easy database access and inspection
# - Development tooling integration
# - Fast iteration cycles
#
# Usage:
#   docker-compose -f docker-compose-dev.yml --profile postgres up -d
#   docker-compose -f docker-compose-dev.yml --profile postgres --profile redis up -d
#   docker-compose -f docker-compose-dev.yml --profile postgres --profile nginx up -d
#   docker-compose -f docker-compose-dev.yml --profile postgres --profile redis --profile nginx up -d
#
# Features:
#   - Development-optimized settings (debug mode, verbose logging)
#   - File watching and live reload
#   - Direct database access for debugging
#   - Development tools and utilities
#   - Test data seeding
#
# =============================================================================

services:
  # Main application service
  app:
    image: ${CI_REGISTRY_IMAGE:-trakbridge}:${IMAGE_TAG:-latest}
    container_name: ${COMPOSE_PROJECT_NAME:-trakbridge}
    restart: unless-stopped

    # Development environment configuration
    environment:
      # Flask environment - Development mode
      FLASK_ENV: "development"
      FLASK_APP: "app.py"
      
      # Dynamic user creation for runtime
      USER_ID: ${DOCKER_USER_ID:-1000}
      GROUP_ID: ${DOCKER_GROUP_ID:-1000}
      
      # Configuration Management
      TRAKBRIDGE_CONFIG_DIR: "/app/external_config"
      TRAKBRIDGE_CONFIG_AUTO_INSTALL: "true"
      TRAKBRIDGE_CONFIG_UPDATE_MODE: "preserve"

      # Database configuration
      DB_TYPE: "postgresql"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_NAME: "trakbridge_dev"
      DB_USER: "trakbridge_dev"

      # Development settings
      DEBUG: "true"
      LOG_LEVEL: "INFO"
      LOG_DIR: "logs"
      
      # Application URL for development
      TRAKBRIDGE_APPLICATION_URL: "http://localhost:5000"

      # Performance settings
      MAX_WORKER_THREADS: ${MAX_WORKER_THREADS:-8}
      MAX_CONCURRENT_STREAMS: ${MAX_CONCURRENT_STREAMS:-200}
      DEFAULT_POLL_INTERVAL: ${DEFAULT_POLL_INTERVAL:-120}
      HTTP_TIMEOUT: ${HTTP_TIMEOUT:-30}
      HTTP_MAX_CONNECTIONS: ${HTTP_MAX_CONNECTIONS:-100}
      HTTP_MAX_CONNECTIONS_PER_HOST: ${HTTP_MAX_CONNECTIONS_PER_HOST:-10}
      ASYNC_TIMEOUT: ${ASYNC_TIMEOUT:-60}

      # Feature flags
      ENABLE_SQL_ECHO: ${ENABLE_SQL_ECHO:-false}
      SQLALCHEMY_RECORD_QUERIES: ${SQLALCHEMY_RECORD_QUERIES:-false}
      
      # Authentication Configuration (Development)
      # LDAP Settings
      LDAP_ENABLED: "${LDAP_ENABLED:-false}"
      LDAP_SERVER: "${LDAP_SERVER:-ldap://your-ad-server.company.com}"
      LDAP_PORT: "${LDAP_PORT:-389}"
      LDAP_USE_SSL: "${LDAP_USE_SSL:-false}"
      LDAP_USE_TLS: "${LDAP_USE_TLS:-false}"
      LDAP_VALIDATE_CERT: "${LDAP_VALIDATE_CERT:-false}"
      LDAP_BIND_DN: "${LDAP_BIND_DN:-CN=trakbridge,OU=Service Accounts,DC=company,DC=com}"
      LDAP_BIND_PASSWORD: "${LDAP_BIND_PASSWORD:-default-ldap-password}"
      LDAP_USER_SEARCH_BASE: "${LDAP_USER_SEARCH_BASE:-OU=Users,DC=company,DC=com}"
      LDAP_USER_SEARCH_FILTER: "${LDAP_USER_SEARCH_FILTER:-(sAMAccountName={username})}"
      LDAP_GROUP_SEARCH_BASE: "${LDAP_GROUP_SEARCH_BASE:-OU=Groups,DC=company,DC=com}"
      LDAP_GROUP_SEARCH_FILTER: "${LDAP_GROUP_SEARCH_FILTER:-(member={user_dn})}"
      LDAP_ADMIN_GROUP: "${LDAP_ADMIN_GROUP:-CN=TrakBridge-Admins,OU=Groups,DC=company,DC=com}"
      LDAP_OPERATOR_GROUP: "${LDAP_OPERATOR_GROUP:-CN=TrakBridge-Operators,OU=Groups,DC=company,DC=com}"
      LDAP_USER_GROUP: "${LDAP_USER_GROUP:-CN=TrakBridge-Users,OU=Groups,DC=company,DC=com}"
      LDAP_DEFAULT_ROLE: "${LDAP_DEFAULT_ROLE:-user}"
      LDAP_CONNECTION_TIMEOUT: "${LDAP_CONNECTION_TIMEOUT:-10}"
      LDAP_RESPONSE_TIMEOUT: "${LDAP_RESPONSE_TIMEOUT:-30}"
      
      # OIDC/SSO Settings
      OIDC_ENABLED: "${OIDC_ENABLED:-false}"
      OIDC_ISSUER: "${OIDC_ISSUER:-https://your-identity-provider.com}"
      OIDC_CLIENT_ID: "${OIDC_CLIENT_ID:-trakbridge-client}"
      OIDC_CLIENT_SECRET: "${OIDC_CLIENT_SECRET:-default-oidc-secret}"
      OIDC_REDIRECT_URI: "${OIDC_REDIRECT_URI:-http://localhost:5000/auth/oidc/callback}"
      OIDC_VERIFY_SIGNATURE: "${OIDC_VERIFY_SIGNATURE:-false}"
      OIDC_VERIFY_AUDIENCE: "${OIDC_VERIFY_AUDIENCE:-false}"
      OIDC_VERIFY_ISSUER: "${OIDC_VERIFY_ISSUER:-false}"
      OIDC_ADMIN_GROUP: "${OIDC_ADMIN_GROUP:-trakbridge-admins}"
      OIDC_OPERATOR_GROUP: "${OIDC_OPERATOR_GROUP:-trakbridge-operators}"
      OIDC_USER_GROUP: "${OIDC_USER_GROUP:-trakbridge-users}"
      OIDC_DEFAULT_ROLE: "${OIDC_DEFAULT_ROLE:-user}"
      
      # Local Authentication (Development - Relaxed)
      LOCAL_AUTH_ENABLED: "${LOCAL_AUTH_ENABLED:-true}"
      PASSWORD_MIN_LENGTH: "${PASSWORD_MIN_LENGTH:-4}"
      PASSWORD_REQUIRE_UPPERCASE: "${PASSWORD_REQUIRE_UPPERCASE:-false}"
      PASSWORD_REQUIRE_LOWERCASE: "${PASSWORD_REQUIRE_LOWERCASE:-false}"
      PASSWORD_REQUIRE_NUMBERS: "${PASSWORD_REQUIRE_NUMBERS:-false}"
      PASSWORD_REQUIRE_SPECIAL: "${PASSWORD_REQUIRE_SPECIAL:-false}"
      PASSWORD_MAX_AGE_DAYS: "${PASSWORD_MAX_AGE_DAYS:-}"
      
      # Session Configuration (Development)
      SESSION_LIFETIME_HOURS: "${SESSION_LIFETIME_HOURS:-8}"
      SESSION_CLEANUP_INTERVAL: "${SESSION_CLEANUP_INTERVAL:-5}"
      SESSION_SECURE_COOKIES: "${SESSION_SECURE_COOKIES:-false}"
      SESSION_COOKIE_DOMAIN: "${SESSION_COOKIE_DOMAIN:-}"
      SESSION_COOKIE_PATH: "${SESSION_COOKIE_PATH:-/}"

      # Worker coordination removed for single worker deployment
      # ENABLE_WORKER_COORDINATION and REDIS_URL removed - no longer needed

      # Secret file paths (if secrets are in /app/secrets instead of /run/secrets)
      DB_PASSWORD_FILE: "/app/secrets/db_password"
      SECRET_KEY_FILE: "/app/secrets/secret_key" 
      TB_MASTER_KEY_FILE: "/app/secrets/tb_master_key"
      LDAP_BIND_PASSWORD_FILE: "/app/secrets/ldap_bind_password"
      OIDC_CLIENT_SECRET_FILE: "/app/secrets/oidc_client_secret"
      # REDIS_PASSWORD_FILE: "/app/secrets/redis_password" - removed for single worker deployment

    # Secrets - use Docker Compose secrets for consistency with production
    secrets:
      - db_password
      - secret_key
      - tb_master_key
      - ldap_bind_password
      - oidc_client_secret
      # - redis_password  # removed for single worker deployment

    # Ports
    ports:
      - "${APP_PORT:-5000}:5000"

    # Volumes
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./backups:/app/backups
      - ./secrets:/app/secrets

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s

    # Dependencies - wait for database to be healthy
    depends_on:
      postgres:
        condition: service_healthy
        required: false
      mysql:
        condition: service_healthy
        required: false
      # redis dependency removed for single worker deployment

    # Resource limits (optional)
    deploy:
      resources:
        limits:
          cpus: '${CPU_LIMIT:-2.0}'
          memory: ${MEMORY_LIMIT:-2G}
        reservations:
          cpus: '${CPU_RESERVATION:-0.5}'
          memory: ${MEMORY_RESERVATION:-512M}

    # Networks
    networks:
      - app-network

  # PostgreSQL database (optional)
  postgres:
    image: postgres:17-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-trakbridge}-postgres
    restart: unless-stopped
    profiles:
      - postgres
      - db

    command: |
      postgres
      -c shared_buffers=128MB
      -c effective_cache_size=512MB
      -c maintenance_work_mem=32MB
      -c checkpoint_completion_target=0.7
      -c wal_buffers=8MB
      -c default_statistics_target=50
      -c random_page_cost=1.1
      -c effective_io_concurrency=100
      -c work_mem=2MB
      -c min_wal_size=256MB
      -c max_wal_size=1GB
      -c max_connections=100
      -c shared_preload_libraries='pg_stat_statements'
      -c track_activity_query_size=1024
      -c log_line_prefix='%t [%p]: user=%u,db=%d '
      -c log_checkpoints=off
      -c log_connections=off
      -c log_disconnections=off
      -c log_lock_waits=off
      -c log_min_duration_statement=-1
      -c log_statement=none

    environment:
      POSTGRES_DB: "trakbridge_dev"
      POSTGRES_USER: "trakbridge_dev"
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_INITDB_ARGS: "--auth-host=trust"

    secrets:
      - db_password

    ports:
      - "${POSTGRES_PORT:-5432}:5432"

    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts/postgres:/docker-entrypoint-initdb.d:ro

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trakbridge_dev -d trakbridge_dev"]
      interval: 15s
      timeout: 5s
      retries: 3

    networks:
      - app-network

    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # MySQL database (optional)
  mysql:
    image: mariadb:11.8
    container_name: ${COMPOSE_PROJECT_NAME:-trakbridge}-mysql
    restart: unless-stopped
    profiles:
      - mysql
      - db

    command: |
      --max-connections=100
      --wait-timeout=180
      --interactive-timeout=180
      --net-read-timeout=30
      --net-write-timeout=30
      --max-allowed-packet=64M
      --innodb-buffer-pool-load-at-startup=OFF
      --innodb-buffer-pool-dump-at-shutdown=OFF
      --innodb-log-file-size=64M
      --innodb-flush-log-at-trx-commit=2
      --bind-address=0.0.0.0
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --skip-name-resolve
      --innodb-buffer-pool-size=128M

    environment:
      MARIADB_DATABASE: ${DB_NAME:-trakbridge_db}
      MARIADB_USER: ${DB_USER:-trakbridge}
      MARIADB_PASSWORD_FILE: /run/secrets/db_password
      MARIADB_ROOT_PASSWORD_FILE: /run/secrets/db_password
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_MYSQL_LOCALHOST_USER: "1"

    secrets:
      - db_password

    ports:
      - "${MYSQL_PORT:-3306}:3306"

    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/init-scripts/mysql:/docker-entrypoint-initdb.d:ro

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 5s
      retries: 3

    networks:
      - app-network

    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis Service - REMOVED for single worker deployment
  # Redis worker coordination has been removed in favor of single worker deployment.
  # This reduces resource usage and eliminates coordination complexity.

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME:-trakbridge}-nginx
    restart: unless-stopped
    profiles:
      - nginx
      - proxy

    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"

    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx

    depends_on:
      - app

    networks:
      - app-network

# Networks
networks:
  app-network:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME:-trakbridge}-network

# Volumes
volumes:
  postgres_data:
    driver: local
    name: ${COMPOSE_PROJECT_NAME:-trakbridge}-postgres-data

  mysql_data:
    driver: local
    name: ${COMPOSE_PROJECT_NAME:-trakbridge}-mysql-data

  # redis_data volume removed for single worker deployment

secrets:
  db_password:
    file: ./secrets/db_password
  secret_key:
    file: ./secrets/secret_key
  tb_master_key:
    file: ./secrets/tb_master_key
  ldap_bind_password:
    file: ./secrets/ldap_bind_password
  oidc_client_secret:
    file: ./secrets/oidc_client_secret
  # redis_password secret removed for single worker deployment