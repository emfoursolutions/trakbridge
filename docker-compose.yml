# =============================================================================
# TrakBridge Docker Compose Configuration
# =============================================================================
#
# Usage:
#   docker-compose up                         # App only (requires external DB or SQLite)
#   docker-compose --profile postgres up      # App + PostgreSQL
#   docker-compose --profile mysql up         # App + MySQL
#   docker-compose --profile nginx up         # App + Nginx reverse proxy
#   docker-compose --profile postgres --profile nginx up  # Full stack
#
# Configuration:
#   Edit the 'x-environment' section below to customize your deployment
#   
#   Persistent Configuration:
#   The application supports persistent configuration through the ./config volume mount.
#   Default configuration files are automatically installed on first run.
#   Set TRAKBRIDGE_CONFIG_UPDATE_MODE to control how configs are updated:
#     - "preserve": Keep existing configs (default)
#     - "overwrite": Replace with container defaults  
#     - "merge": Smart merge (future feature)
#
# =============================================================================

# =============================================================================
# CONFIGURATION SECTION - Edit these values for your deployment
# =============================================================================
x-environment: &common-environment
  # Application Settings
  APP_VERSION: "latest"
  FLASK_ENV: "production"
  FLASK_APP: "app.py"
  APP_PORT: "5000"
  USER_ID: "1000"  # Change if needed for filesystem permissions
  GROUP_ID: "1000"  # Change if needed for filesystem permissions
  
  # Configuration Management
  TRAKBRIDGE_CONFIG_DIR: "/app/external_config"
  TRAKBRIDGE_CONFIG_AUTO_INSTALL: "true"
  TRAKBRIDGE_CONFIG_UPDATE_MODE: "preserve"
  
  # Database Configuration - PostgreSQL (default)
  DB_TYPE: "postgresql" 
  DB_HOST: "postgres"
  DB_PORT: "5432" 
  DB_NAME: "trakbridge"
  DB_USER: "trakbridge"
  
  # Database Configuration - MySQL (alternative - comment out PostgreSQL above if using)
  # DB_TYPE: "mysql" 
  # DB_HOST: "mysql"
  # DB_PORT: "3306"
  # DB_NAME: "trakbridge"
  # DB_USER: "trakbridge"

  # Database Configuration - SQLite (alternative - comment out PostgreSQL above if using)
  # DB_TYPE: "sqlite"

  # Application Performance
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  MAX_WORKER_THREADS: "4"
  DEFAULT_POLL_INTERVAL: "120"
  HTTP_TIMEOUT: "30"
  
  # Authentication Configuration
  # LDAP Settings (set LDAP_ENABLED to "true" and configure for your environment)
  LDAP_ENABLED: "false"
  LDAP_SERVER: "ldap://your-ad-server.company.com"  # Update for your LDAP server
  LDAP_PORT: "389"
  LDAP_USE_SSL: "false"
  LDAP_USE_TLS: "true"
  LDAP_VALIDATE_CERT: "true"
  LDAP_BIND_DN: "CN=trakbridge,OU=Service Accounts,DC=company,DC=com"  # Update for your domain
  LDAP_USER_SEARCH_BASE: "OU=Users,DC=company,DC=com"  # Update for your domain
  LDAP_USER_SEARCH_FILTER: "(sAMAccountName={username})"
  LDAP_GROUP_SEARCH_BASE: "OU=Groups,DC=company,DC=com"  # Update for your domain
  LDAP_GROUP_SEARCH_FILTER: "(member={user_dn})"
  LDAP_ADMIN_GROUP: "CN=TrakBridge-Admins,OU=Groups,DC=company,DC=com"  # Update group names
  LDAP_OPERATOR_GROUP: "CN=TrakBridge-Operators,OU=Groups,DC=company,DC=com"
  LDAP_USER_GROUP: "CN=TrakBridge-Users,OU=Groups,DC=company,DC=com"
  LDAP_DEFAULT_ROLE: "user"
  LDAP_CONNECTION_TIMEOUT: "10"
  LDAP_RESPONSE_TIMEOUT: "30"
  
  # OIDC/SSO Settings (set OIDC_ENABLED to "true" and configure for your identity provider)
  OIDC_ENABLED: "false"
  OIDC_ISSUER: "https://your-identity-provider.com"  # Update for your OIDC provider
  OIDC_CLIENT_ID: "trakbridge-client"  # Update with your client ID
  OIDC_REDIRECT_URI: "https://trakbridge.company.com/auth/oidc/callback"  # Update for your domain
  OIDC_VERIFY_SIGNATURE: "true"
  OIDC_VERIFY_AUDIENCE: "true"
  OIDC_VERIFY_ISSUER: "true"
  OIDC_ADMIN_GROUP: "trakbridge-admins"  # Update role mappings for your provider
  OIDC_OPERATOR_GROUP: "trakbridge-operators"
  OIDC_USER_GROUP: "trakbridge-users"
  OIDC_DEFAULT_ROLE: "user"
  
  # Local Authentication (always available as fallback)
  LOCAL_AUTH_ENABLED: "true"
  PASSWORD_MIN_LENGTH: "12"
  PASSWORD_REQUIRE_UPPERCASE: "true"
  PASSWORD_REQUIRE_LOWERCASE: "true"
  PASSWORD_REQUIRE_NUMBERS: "true"
  PASSWORD_REQUIRE_SPECIAL: "true"
  PASSWORD_MAX_AGE_DAYS: "90"
  
  # Session Configuration
  SESSION_LIFETIME_HOURS: "8"
  SESSION_CLEANUP_INTERVAL: "60"
  SESSION_SECURE_COOKIES: "true"
  SESSION_COOKIE_DOMAIN: ""  # Leave blank for auto-detection
  SESSION_COOKIE_PATH: "/"
  
# Secret file paths - customize if needed
x-secrets: &common-secrets
  DB_PASSWORD_FILE: "./secrets/db_password"
  SECRET_KEY_FILE: "./secrets/secret_key"
  TB_MASTER_KEY_FILE: "./secrets/tb_master_key"
  LDAP_BIND_PASSWORD_FILE: "./secrets/ldap_bind_password"
  OIDC_CLIENT_SECRET_FILE: "./secrets/oidc_client_secret"

services:
  # =============================================================================
  # TrakBridge Application
  # =============================================================================
  trakbridge:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: emfoursolutions/trakbridge:latest
    container_name: trakbridge
    restart: unless-stopped

    environment:
      <<: [*common-environment, *common-secrets]
      
    secrets:
      - db_password
      - secret_key
      - tb_master_key
      - ldap_bind_password
      - oidc_client_secret

    ports:
      - "5000:5000"  # Change first port if you need external access on different port

    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./secrets:/app/secrets
      - ./config:/app/external-config
      - ./plugins:/app/external-plugins

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    depends_on:
      postgres:
        condition: service_healthy
        required: false
      mysql:
        condition: service_healthy
        required: false

    networks:
      - trakbridge

  # =============================================================================
  # PostgreSQL Database (Optional)
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: trakbridge-postgres
    restart: unless-stopped
    profiles: ["postgres"]

    environment:
      POSTGRES_DB: trakbridge
      POSTGRES_USER: trakbridge
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password

    secrets:
      - db_password

    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts/postgres:/docker-entrypoint-initdb.d:ro

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trakbridge -d trakbridge"]
      interval: 10s
      timeout: 5s
      retries: 5

    networks:
      - trakbridge

  # =============================================================================
  # MySQL Database (Optional)
  # =============================================================================
  mysql:
    image: mysql:8.0
    container_name: trakbridge-mysql
    restart: unless-stopped
    profiles: ["mysql"]

    environment:
      MYSQL_DATABASE: trakbridge
      MYSQL_USER: trakbridge
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_password

    secrets:
      - db_password

    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/init-scripts/mysql:/docker-entrypoint-initdb.d:ro

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

    networks:
      - trakbridge

  # =============================================================================
  # Nginx Reverse Proxy (Optional)
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: trakbridge-nginx
    restart: unless-stopped
    profiles: ["nginx"]

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx

    depends_on:
      trakbridge:
        condition: service_healthy

    networks:
      - trakbridge

# =============================================================================
# Networks & Volumes
# =============================================================================
networks:
  trakbridge:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mysql_data:
    driver: local

# =============================================================================
# Secrets
# =============================================================================
secrets:
  db_password:
    file: ./secrets/db_password
  secret_key:
    file: ./secrets/secret_key
  tb_master_key:
    file: ./secrets/tb_master_key
  ldap_bind_password:
    file: ./secrets/ldap_bind_password
  oidc_client_secret:
    file: ./secrets/oidc_client_secret