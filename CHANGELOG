## [v1.0.0-rc.4] - 2025-09-05

### Added
- **Enhanced Plugin Architecture**
  - Eliminated plugin warnings during health checks with defensive configuration access methods
  - Added `get_stream_config_value()` and `log_config_source()` helper methods to BaseGPSPlugin
  - Automatic production context detection for appropriate log levels
  - Improved plugin lifecycle management with StreamWorker context marking

- **Tracker Callsign Mapping System**
  - Custom callsign assignment for individual GPS trackers (Garmin, SPOT, Traccar)
  - Per-tracker COT type overrides for advanced operational flexibility
  - Stream-isolated configurations with immediate tracker discovery
  - Live tracker discovery with auto-assignment and refresh capabilities

- **Code Quality & Refactoring Planning**
  - Comprehensive analysis of logging rationalization opportunities (56+ files)
  - Configuration pattern standardization plan (19 files)
  - Database operation pattern extraction (24+ files)
  - Import optimization and dependency consolidation planning

### Changed
- **Database Concurrency Improvements**
  - Resolved MySQL 11 concurrency errors with session activity throttling
  - Enhanced database connection management to prevent race conditions
  - Improved session handling for multi-worker deployments

### Fixed
- Fixed bare except statements in database error handlers (app.py)
- Eliminated "No stream object available" warnings in Deepstate plugin
- Improved error handling and logging consistency across plugins
- Fixed startup logging banner spam from worker processes

## [v1.0.0-rc.3] - 2025-08-26

### Added
- **Reverse Proxy Support**
  - ProxyFix middleware for proper handling of X-Forwarded-* headers
  - Enhanced proxy documentation with comprehensive setup examples
  - Production deployment compatibility with Apache/Nginx

### Fixed
- **Certificate Configuration Improvements**
  - Disabled ConfigParser interpolation for P12 certificate passwords
  - Support for special characters (%, $, etc.) in certificate passwords
  - Fixed TAK server configuration interpolation syntax errors
- Fixed authentication redirects when deployed behind reverse proxies

### Changed
- Enhanced COT service configuration with robust password handling
- Improved reverse proxy documentation and troubleshooting guides

## [v1.0.0-rc.2] - 2025-08-26

### Added
- **Database Reliability Enhancements**
  - WAL mode implementation for SQLite concurrent access
  - Enhanced error messages for database connection troubleshooting
  - Migration system robustness with better state detection
  - Multi-process SQLite concurrency support

- **Authentication System Improvements**
  - LDAP role mapping debug logging for enhanced troubleshooting
  - Active Directory group resolution with `memberOf` attribute handling
  - Multi-provider fallback system for robust authentication
  - Enhanced session management and cross-provider tracking

### Fixed
- **Critical Database Fixes**
  - Fixed SQLite database initialization loop causing 120+ second hangs
  - SQLite production optimization with automatic worker reduction
  - Bootstrap coordination preventing duplicate admin user creation
  - Fixed "cannot access local variable 'db'" error in bootstrap logic
- **Authentication & Session Fixes**
  - Corrected LDAP role assignment for proper user roles
  - Fixed environment variable loading differences between dev/production
  - Improved cross-provider session tracking and lifecycle
- **Maritime CoT Types** - Fixed display in ATAK and WinTAK clients
- Variable scoping errors in database initialization resolved
- Test suite reliability improvements in bootstrap service coordination

### Changed
- **SQLite Production Support** - Reliable SQLite deployment with appropriate optimizations
- Docker vs local environment LDAP role mapping discrepancies resolved
- Bootstrap loop prevention for missing database files

## [v1.0.0-rc.1] - 2025-08-09

### Added
- **Complete Authentication System**
  - Multi-provider authentication support (Local database, LDAP/Active Directory, OIDC/SSO)
  - Role-based access control with four roles: Viewer, User, Operator, Admin
  - Automatic initial admin user creation via bootstrap service
  - Session management with configurable lifetime and automatic cleanup
  - Web-based user management interface with role assignment
  - Comprehensive password policies and security enforcement
  - Audit logging for all authentication events

- **Plugin Categorization System**
  - Three main plugin categories: OSINT, Tracker, EMS
  - Category-based UI organization for improved user experience
  - RESTful API endpoints for plugin category discovery (`/api/plugins/categories`, `/api/plugins/by-category/{category}`)
  - Dynamic category mapping system for existing and new plugins
  - Enhanced plugin selection with organized category dropdown
  - Deepstate plugin properly categorized as OSINT (no longer "Coming Soon")

- **Docker Compose Configuration Refactoring**
  - Eliminated .env file dependencies for simplified deployment
  - Direct environment variable configuration in docker-compose.yml
  - Docker secrets integration for sensitive data (passwords, encryption keys)
  - Multi-environment support (development, staging, production)
  - Centralized configuration management approach

- **Comprehensive Documentation Overhaul**
  - User-focused documentation for Docker deployments
  - Complete authentication setup guides for all providers
  - Plugin development guides with categorization examples
  - Updated installation, upgrade, and administrator guides
  - Docker-first configuration examples throughout

### Changed
- **BREAKING**: Authentication is now required for all access (major change from v1.0.0-beta.4)
- **BREAKING**: Configuration moved from .env files to docker-compose.yml environment variables
- Plugin selection UI now organized by categories (OSINT, Tracker, EMS)
- Documentation approach shifted from development-focused to user deployment-focused
- Default credentials: admin / TrakBridge-Setup-2025! (forced password change on first login)

### Fixed
- Deepstate plugin status corrected from "Coming Soon" to fully implemented OSINT category
- Configuration management simplified for production deployments
- Docker secrets properly integrated for sensitive credential management

### Migration Notes
- Automatic database migration creates authentication tables on upgrade
- Existing stream and TAK server configurations preserved during upgrade  
- Initial admin user setup required on first deployment
- Clear upgrade path provided with detailed backup and recovery procedures
- Docker compose profiles updated for better service orchestration

### Security Improvements
- All authentication providers support secure connections (TLS/SSL)
- Field-level encryption for sensitive configuration data
- Session security with secure cookies and proper cleanup
- Docker secrets prevent credential exposure in environment variables
- Comprehensive audit logging for security monitoring

## [v1.0.0-beta.4] - 2025-07-25
### Added
- Support for loading external plugins
- Module name verification for plugin safety
- Protections against unsafe dynamic imports
- Path traversal prevention for plugin resolution
- JSON validation:
  - Size limits (64KB plugins, 256KB DB, 1MB default)
  - Max depth: 32 levels
  - Max 1,000 keys per object and 10,000 array elements
  - Schema-based type validation per plugin

### Changed
- Docker container now runs as a non-root user
- Dockerfile and entrypoint.sh security hardened
- Prevented reapplication of already-run database migrations

### Fixed
- Removed XSS vectors from API endpoints
- Improved data validation across APIs

### Removed
- Remote asset loading:
  - All external CSS/JS/fonts now local:
    - bootstrap, all.min, google-fonts, jQuery, and fonts
  
## [v1.0.0-beta.3] - 2025-07-25

### Added
- **CoT Type Configuration**  
  Dynamically configure CoT Type per feed or for the entire stream, enabling greater flexibility in data interpretation and routing.
  
- **Deepstate Map Plugin**  
  Added support for ingesting and processing Deepstate map data into CoT format.

### Changed
- **Garmin Plugin Refactor**  
  Removed redundant functions and centralized timestamp handling and KML parsing for improved maintainability and consistency.

### Improved
- **cot_service Logging**  
  Reduced log noise and enhanced debugging clarity with more targeted log output.